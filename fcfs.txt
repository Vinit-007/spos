import java.util.Scanner;
class FCFS {
    // Function to find the waiting time for all processes
    static void findWaitingTime(int processes[], int n, int bt[], int wt[]) {
        // Waiting time for the first process is 0wt[0] = 0;
        // Calculating waiting time
        for (int i = 1; i < n; i++) {
            wt[i] = bt[i - 1] + wt[i - 1];
        }
    }
    // Function to calculate the turnaround time
    static void findTurnAroundTime(int processes[], int n, int bt[], int wt[], int tat[]) {
        // Calculating turnaround time by adding bt[i] + wt[i]
        for (int i = 0; i < n; i++) {
            tat[i] = bt[i] + wt[i];
        }
    }
    // Function to calculate average time
    void findavgTime(int processes[], int n, int bt[]) {
        int wt[] = new int[n], tat[] = new int[n];
        int total_wt = 0, total_tat = 0;
        // Function to find waiting time of all processes
        findWaitingTime(processes, n, bt, wt);
        // Function to find turnaround time for all processes
        findTurnAroundTime(processes, n, bt, wt, tat);
        // Display processes along with all details
        System.out.printf("Processes Burst time Waiting time Turnaround time\n");
        // Calculate total waiting time and total turnaround time
        for (int i = 0; i < n; i++) {
            total_wt = total_wt + wt[i];
            total_tat = total_tat + tat[i];
            System.out.printf(" %d \t\t %d \t\t %d \t\t %d\n", (i + 1), bt[i], wt[i], tat[i]);
        }
        // Calculate and display average waiting time and average turnaround time
        float avg_wt = (float) total_wt / n;
        float avg_tat = (float) total_tat / n;
        System.out.printf("Average waiting time = %.2f\n", avg_wt);
        System.out.printf("Average turnaround time = %.2f\n", avg_tat);
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter the number of processes: ");
        int n = sc.nextInt();
        int processes[] = new int[n];
        int burst_time[] = new int[n];
        for (int i = 0; i < n; i++) {
            System.out.print("Enter burst time for process " + (i + 1) + ": ");
            burst_time[i] = sc.nextInt();
        }
        FCFS fcfs = new FCFS();
        fcfs.findavgTime(processes, n, burst_time);
    }